#!/bin/bash --login

########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=04:00:00             # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --ntasks=1                  # number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --cpus-per-task=5           # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem=30G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name ApplyHardFilter      # you can give your job a name for easier identification (same as -J)
########## Command Lines to Run ##########

cd $root

source $root/pkings_gwas.env

mkdir -p $root"/output_data/slurm_logs"/03_QC/

outdir=${scratch_store}/output_data/03_QC/

mkdir -p ${outdir}


interval_files=($(find "${root}/input_data/01_Terra/chrom-interval-files/" "${root}/input_data/01_Terra/remaining-interval-files/" -type f))

if [[ "${vartype}" == "SNP" ]]; then
  singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gatk_image} /gatk/gatk \
       --java-options "-Xms8000m -Xmx25000m" SelectVariants \
      -R /project_root/input_data/00_Reference_Genome/${reference} \
      -V /project_root/output_data/01_Terra/${vcf_file} \
      -L ${interval_files[$SLURM_ARRAY_TASK_ID]} \
      -select-type SNP \
      -select-type NO_VARIATION \
      -O /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.vcf.gz

  singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gatk_image} /gatk/gatk --java-options "-Xms8000m -Xmx25000m" VariantFiltration \
    -V /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.vcf.gz \
    -R /project_root/input_data/00_Reference_Genome/${reference} \
    --filter-expression "(vc.isSNP() && (vc.hasAttribute('QD') && QD < 5.0))" \
    --filter-name "QD5" \
    --filter-expression "(vc.isSNP() && (vc.hasAttribute('SOR') && SOR > 3.0))" \
    --filter-name "SOR3" \
    --filter-expression "(vc.isSNP() && (vc.hasAttribute('FS') && FS > 60.0))" \
    --filter-name "FS60" \
    --filter-expression "(vc.isSNP() && (vc.hasAttribute('MQ') && MQ < 40.0))" \
    --filter-name "MQ40" \
    --filter-expression "(vc.isSNP() && (vc.hasAttribute('MQRankSum') && MQRankSum < -12.5))" \
    --filter-name "MQ12.5" \
    --filter-expression "(vc.isSNP() && (vc.hasAttribute('ReadPosRankSum') && ReadPosRankSum < -8.0))" \
    --filter-name "RPRS8" \
    -G-filter "vc.isSNP() && DP < 2" \
    -G-filter-name "gtDP2" \
    -G-filter "vc.isSNP() && DP > 100" \
    -G-filter-name "gtDP100" \
    -G-filter "vc.isSNP() && GQ < 10" \
    -G-filter-name "gtGQ10" \
    -O /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.vcf.gz

#set filtered GT to no call
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gatk_image} /gatk/gatk --java-options "-Xms8000m -Xmx25000m" SelectVariants  \
  -R /project_root/input_data/00_Reference_Genome/${reference} \
  -V /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.vcf.gz \
  --set-filtered-gt-to-nocall \
  -O /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.vcf.gz

singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} vcftools \
--gzvcf /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.vcf.gz \
--FILTER-summary \
--out  /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.vcf.summary

#filtered with invariants. new line here
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} \
bash -c "bcftools view --threads 4 -f PASS -e 'ALT="*" | TYPE~"indel" | ref="N"' /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.vcf.gz | bcftools annotate -x '^INFO/AN,INFO/AC,^FORMAT/GT,FORMAT/AD,FORMAT/DP' -O z -o /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.PASS.vcf.gz"
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "tabix /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.PASS.vcf.gz"

#filtered SNPs only
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "bcftools view --threads 4 -v snps -O z -o /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.ONLY.filtered.setGT.PASS.vcf.gz /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.PASS.vcf.gz"
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "tabix /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.ONLY.filtered.setGT.PASS.vcf.gz"

#filtered biallelic SNPs only
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "bcftools view --threads 4 -v snps -m2 -M2 -O z -o /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.ONLY.BIALLELIC.ONLY.filtered.setGT.PASS.vcf.gz /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.ONLY.filtered.setGT.PASS.vcf.gz"
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "tabix /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.ONLY.BIALLELIC.ONLY.filtered.setGT.PASS.vcf.gz"

#require that 50% of samples were non missing to include invariant site
#note that later I found that this does not exclude triallelic sites
singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "vcftools --gzvcf /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.and.inv.filtered.setGT.PASS.vcf.gz \
--max-maf 0 \
--max-missing 0.50 \
--max-alleles 1 \
--recode --stdout | bgzip -c > /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INVARIANT.ONLY.vcf.gz"

singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "tabix /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INVARIANT.ONLY.vcf.gz"

singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "bcftools concat \
--threads 4 \
--allow-overlaps \
--rm-dups all \
/out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.ONLY.BIALLELIC.ONLY.filtered.setGT.PASS.vcf.gz \
/out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INVARIANT.ONLY.vcf.gz \
-O z -o /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.BIALLELIC.ONLY.AND.INV.TOGETHER.filtered.setGT.PASS.vcf.gz"

singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} bash -c "tabix /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.SNP.BIALLELIC.ONLY.AND.INV.TOGETHER.filtered.setGT.PASS.vcf.gz"

fi

if [[ "${vartype}" == "INDEL" ]]; then
  singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gatk_image} /gatk/gatk \
       --java-options "-Xms8000m -Xmx25000m" SelectVariants \
      -R /project_root/input_data/00_Reference_Genome/${reference} \
      -V /project_root/output_data/01_Terra/${vcf_file} \
      -L ${interval_files[$SLURM_ARRAY_TASK_ID]} \
      -select-type INDEL \
      -O /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.vcf.gz

  singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gatk_image} /gatk/gatk --java-options "-Xms8000m -Xmx25000m" VariantFiltration \
    -R /project_root/input_data/00_Reference_Genome/${reference} \
    -V /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.vcf.gz \
    -filter-expression "(vc.isIndel() && (vc.hasAttribute('QD') && QD < 5.0))" \
    --filter-name "QD5" \
    -filter "(vc.isIndel() && (vc.hasAttribute('FS') && FS > 200.0))" \
    --filter-name "FS200" \
    -filter "(vc.isIndel() && (vc.hasAttribute('ReadPosRankSum') &&  ReadPosRankSum< -20.0))" \
    --filter-name "ReadPosRankSum-20" \
    -G-filter "vc.isIndel() && DP < 2" \
    -G-filter-name "gtDP2" \
    -G-filter "vc.isIndel() && DP > 100" \
    -G-filter-name "gtDP100" \
    -G-filter "vc.isIndel() && GQ < 10" \
    -G-filter-name "gtGQ10" \
    -O /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.filtered.vcf.gz

  singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gatk_image} /gatk/gatk --java-options "-Xms8000m -Xmx25000m" SelectVariants  \
  -R /project_root/input_data/00_Reference_Genome/${reference} \
  -V /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.filtered.vcf.gz \
  --set-filtered-gt-to-nocall \
  -O /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.filtered.setGT.vcf.gz

  singularity exec --bind $root:/project_root --bind $outdir:/out_dir ${gwas_tools} vcftools \
  --gzvcf /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.filtered.setGT.vcf.gz \
  --FILTER-summary \
  --out  /out_dir/${vcf_file%.vcf.gz}.${SLURM_ARRAY_TASK_ID}.INDEL.filtered.setGT.vcf.summary

fi
